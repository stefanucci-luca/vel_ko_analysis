dplyr::binds_rows()
df1=lapply(
diVELphe,
read.delim,
sep=",") %>%
df1 %>%
data.table::rbindlist()
df1 %>%
data.table::rbindlist()
df1 %>%
data.table::rbindlist() -> df1
df1
?tidyr::pivot_wider()
df1 %>%
group_by(Disease) %>%
tidyr::pivot_wider()
df1 %>%
group_by(Disease) %>%
tidyr::pivot_wider(ICD10code)
df1 %>%
group_by(Disease) %>%
tidyr::pivot_wider(id_cols = ICD10code)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code"))
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
tidyr::pivot_wider(id_cols = Disease, values_from = ICD10code)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
tidyr::pivot_wider(id_cols = Disease, values_from = ICD10code, names_from = Disease)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
tidyr::pivot_wider(id_cols = 'Disease', values_from = 'ICD10code', names_from = 'Disease')
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
tidyr::pivot_wider(id_cols = Disease, values_from = ICD10code, names_from = Disease)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
tidyr::pivot_wider(id_cols = Disease, values_from = ICD10code, names_from = Disease, names_repair = "col")
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
collapse(ICD10code)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
paste(ICD10code, collapse = "; ")
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
paste(df1$ICD10code, collapse = "; ")
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
dcast(. ~ Disease)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
reshape2::dcast(. ~ Disease)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
reshape2::dcast(Disease ~ ICD10code)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
reshape2::dcast(ICD10code ~ Disease) -> matrix_phenotypes
matrix_phenotypes
View(matrix_phenotypes)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
reshape2::dcast(Disease ~ ICD10code) -> matrix_phenotypes
View(matrix_phenotypes)
df1 %>%
group_by(Disease) %>%
select(c("Disease","ICD10code")) %>%
tidyr::pivot_wider(Disease ~ ICD10code) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(where(Disease ~ ICD10code)) %>%
tidyr::pivot_wider(Disease ~ ICD10code) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(where(Disease ~ ICD10code))
df1 %>%
group_by(Disease) %>%
select(Disease ~ ICD10code) %>%
tidyr::pivot_wider(Disease ~ ICD10code)
df1 %>%
group_by(Disease) %>%
select(Disease ~ ICD10code) %>%
tidyr::pivot_wider(Disease ~ ICD10code) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease ~ ICD10code) %>%
tidyr::pivot_wider(Disease ~ ICD10code)
df1 %>%
group_by(Disease) %>%
select(Disease ~ ICD10code) -> matrix_phenotypes
rm(df)
rm(df_nodes)
rm(tb)
df1 %>%
group_by(Disease) %>%
select(Disease ~ ICD10code) -> matrix_phenotypes
diVELphe=dir(full.names = T, pattern = "*.csv",
"/Users/ls31/Library/Group Containers/G69SCX94XU.duck/Library/Application Support/duck/Volumes/logincpu.hpc.cam.ac.uk – SFTP/shared_luanluan_luca_UKB/Luca/definitions/secondary_care")
df1=lapply(
diVELphe,
read.delim,
sep=",")
df1 %>%
data.table::rbindlist() -> df1
library(tidyverse)
df1 %>%
data.table::rbindlist() -> df1
df1=lapply(
diVELphe,
read.delim,
sep=",")
df1 %>%
data.table::rbindlist() -> df1
diVELphe
df1=lapply(
diVELphe,
read.delim,
sep=",")
df1
df1 %>%
data.table::rbindlist() -> df1
df1=lapply(
diVELphe,
read.delim,
sep=",") %>%
data.table::rbindlist() -> df1
df1
df1
df1 %>%
group_by(Disease) %>%
select(Disease ~ ICD10code) -> matrix_phenotypes
df1 %>%
group_by(Disease)
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) -> matrix_phenotypes
matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
reshape2::dcast(Disease ~ ICD10code) -> matrix_phenotypes
matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
na.omit() %>%
(Disease ~ ICD10code) -> matrix_phenotypes
matrix_phenotypes
matrix_phenotypes
matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code)
tail(df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code))
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
na.omit() %>%
(Disease ~ ICD10code) -> matrix_phenotypes
View(df1)
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
fill(Disease, .direction = "down") # %>%
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
fill(Disease, .direction = "down") %>%
#(Disease ~ ICD10code) %>%
-> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
fill(Disease, .direction = "down")  -> matrix_phenotypes
View(matrix_phenotypes)
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
fill(Disease, .direction = "down") -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
(Disease ~ ICD10code) -> matrix_phenotypes
matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(Disease ~ ICD10code) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease) -> matrix_phenotypes
matrix_phenotypes
View(matrix_phenotypes)
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(. ~ Disease, value.var = ICD10code ) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(. ~ Disease, value.var = 'ICD10code' ) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease, value.var = 'ICD10code' ) -> matrix_phenotypes
matrix_phenotypes
df1
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease, value.var = ICD10code, fill = ICD10code ) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease, value.var = ICD10code, fill = 'ICD10code' ) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease, value.var = ICD10code ) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease ) -> matrix_phenotypes
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease ) -> matrix_phenotypes
matrix_phenotypes
apply(matrix_phenotypes[,2:dim(matrix_phenotypes)[2]], sum)
apply(matrix_phenotypes[,2:dim(matrix_phenotypes)[2]], sum)
apply(matrix_phenotypes[,2:dim(matrix_phenotypes)[2]], sum)
apply(matrix_phenotypes[,2:dim(matrix_phenotypes)[2]],1, sum)
apply(matrix_phenotypes[,2:dim(matrix_phenotypes)[2]],2, sum)
apply(matrix_phenotypes[,2:dim(matrix_phenotypes)[2]],1, sum)
apply(matrix_phenotypes[,2:dim(matrix_phenotypes)[2]],2, sum)
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease )  %>%
writeClipboard()
??writeClipboard
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease )  %>%
clipr::write_clip()
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease )
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease )  %>%
clipr::write_clip(.)
clipr::write_clip(matrix_phenotypes)
matrix_phenotypes
class(matrix_phenotypes)
View(matrix_phenotypes)
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease ) %>%
write_delim("Desktop/cpanddel.csv", sep=",")
df1 %>%
group_by(Disease) %>%
select(Disease, ICD10code) %>%
filter(Disease != "") %>%
reshape2::dcast(ICD10code ~ Disease ) %>%
write_delim("Desktop/cpanddel.csv", delim=",")
# analysis of UKB data - extracted with the script commented below
df_large = data.table::fread("/Volumes/GoogleDrive-105684671225474146017/My Drive/Phd/Shared Luca Mattia/UKB_VEL_relevant_fields_20210308.csv")
df_large = as.data.frame(df_large)
# remove un-assigned genotypes
df_large = filter(df_large, genotype != "./." )
df_large
# remove un-assigned genotypes
df_large = filter(df_large, genotype != "./." )
colnames(df_large)
filter(df_large, genotype != "./." )
library('lm.beta')
library("questionr")
library('esc')
library('effectsize')
library('tidyverse')
library('see')
library('GGally')
library('RColorBrewer')
# remove un-assigned genotypes
df_large = filter(df_large, genotype != "./." )
# Rename genotype as:
# 0/0 = 0
# 0/1 = 1
# 1/1 = 2
df_large$genotype = str_replace_all(string = df_large$genotype, pattern = "0/0", replacement = "0")
df_large$genotype = str_replace_all(string = df_large$genotype, pattern = "0/1", replacement = "1")
df_large$genotype = str_replace_all(string = df_large$genotype, pattern = "1/1", replacement = "2")
# set WT allele (i.e. "0/0" aka "0") as the one to use for reference
df_large$genotype <- relevel(as.factor(df_large$genotype), ref = "0")
# import ancestry information
eur_unre_500k = data.table::fread('/Users/ls31/Library/Group Containers/G69SCX94XU.duck/Library/Application Support/duck/Volumes/logincpu.hpc.cam.ac.uk – SFTP/shared_luanluan_luca_UKB/british-ancestry-MSUP_unrel_europ_500K_from_will_20210317.tsv') %>%
select(ID)
#Covariates
load('/Users/ls31/Library/Group Containers/G69SCX94XU.duck/Library/Application Support/duck/Volumes/logincpu.hpc.cam.ac.uk – SFTP/shared_luanluan_luca_UKB/Luanluan/data/ukb_dvt_pe_combined.rdata')
# times in the hospital
df_final = merge(df, df_large, by = 'eid' )
df_times_hosp = data.table::fread('/Users/ls31/Library/Group Containers/G69SCX94XU.duck/Library/Application Support/duck/Volumes/logincpu.hpc.cam.ac.uk – SFTP/shared_luanluan_luca_UKB/ukbcvo/times_in_hopital_otUKBcnv.tab',
col.names = c('eid','times_in_hospital'))
df_final = merge(df_final, df_times_hosp, by = 'eid')
# DF that has:
# Unrelated european
# WT
# Het
# Hom
df_final_un_eu = df_final[df_final$eid %in% eur_unre_500k$ID ,]
# DF that has:
# Unrelated european
# WT
# Hom
df_final_un_eu_only_hom = df_final_un_eu[which(df_final_un_eu$genotype == '0' | df_final_un_eu$genotype == '2'),]
# plot correlation between direct and indirect LDL
plot(df_final_un_eu$ldl_indirect_calculation, std_direct_ldl)
std_direct_ldl = (df_final_un_eu$ldl_direct_f30780_0_0 - mean(df_final_un_eu$ldl_direct_f30780_0_0, na.rm = T))/ sd (df_final_un_eu$ldl_direct_f30780_0_0, na.rm = T)
# plot correlation between direct and indirect LDL
plot(df_final_un_eu$ldl_indirect_calculation, std_direct_ldl)
# DF that has:
# Unrelated european
# WT
# Hom
df_final_un_eu_only_hom = df_final_un_eu[which(df_final_un_eu$genotype == '0' | df_final_un_eu$genotype == '2'),]
df_final_un_eu$ldl_indirect_calculation = ( df_final_un_eu$cholesterol_f30690_0_0 - df_final_un_eu$hdl_cholesterol_f30760_0_0 - df_final_un_eu$triglycerides_f30870_0_0 ) / 5
std_direct_ldl = (df_final_un_eu$ldl_direct_f30780_0_0 - mean(df_final_un_eu$ldl_direct_f30780_0_0, na.rm = T))/ sd (df_final_un_eu$ldl_direct_f30780_0_0, na.rm = T)
# plot correlation between direct and indirect LDL
plot(df_final_un_eu$ldl_indirect_calculation, std_direct_ldl)
# df that has to be used in the statistical analysis below
df_to_use = df_final_un_eu
# select genotype and leptin and BMI
colnames(df_to_use)
# lod the libraries used for the analysis
library('lm.beta')
library("questionr")
library('esc')
library('effectsize')
library('tidyverse')
library('see')
library('GGally')
library('RColorBrewer')
# lod the libraries used for the analysis
library('lm.beta')
library("questionr")
library('esc')
library('effectsize')
library('tidyverse')
library('see')
library('GGally')
library('RColorBrewer')
# set seed for reproducibility
set.seed(1)
wdf = xlsx::read.xlsx('../data/result_wp10_vel/data_NIHR.xlsx', sheetIndex = 1)
setwd("~/Documents/GitHub/vel_ko_analysis")
wdf = xlsx::read.xlsx('../data/result_wp10_vel/data_NIHR.xlsx', sheetIndex = 1)
setwd("~/Documents/GitHub/vel_ko_analysis/scripts")
wdf = xlsx::read.xlsx('../data/result_wp10_vel/data_NIHR.xlsx', sheetIndex = 1)
wdf
# Add new ratio
wdf %>%
mutate(lep_over_bmi = LEPT / BMI) -> wdf
wdf
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi))
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
# correct distribution
wdf %>%
mutate(lep_over_bmi = lep_over_bmi - mean(lep_over_bmi, na.rm = T) / sd(lep_over_bmi, na.rm = T)) -> wdf
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
lep_over_bmi - mean(lep_over_bmi, na.rm = T) / sd(lep_over_bmi, na.rm = T)
# correct distribution
wdf %>%
mutate(lep_over_bmi = lep_over_bmi - mean(lep_over_bmi, na.rm = T) / sd(lep_over_bmi, na.rm = T)) -> wdf
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
# correct distribution
wdf %>%
mutate(lep_over_bmi = log(lep_over_bmi) ) -> wdf
log(lep_over_bmi)
wdf %>%
mutate(lep_over_bmi = log(lep_over_bmi) )
# Add new ratio
wdf %>%
mutate(lep_over_bmi = LEPT / BMI) -> wdf
wdf %>%
mutate(lep_over_bmi = log(lep_over_bmi) )
# correct distribution
wdf %>%
mutate(lep_over_bmi = log(lep_over_bmi) ) -> wdf
wdf
plot(density(wdf$lep_over_bmi, na.rm = T))
lm(lep_over_bmi ~ COHORT + GENDER + AGE, data = wdf)
model = lm(lep_over_bmi ~ COHORT + GENDER + AGE, data = wdf)
parameters::parameters(model)
# correct distribution
wdf %>%
# correct for skewness
mutate(lep_over_bmi = log(lep_over_bmi) ) %>%
# standardise
mutate(lep_over_bmi = lep_over_bmi - mean(lep_over_bmi, na.rm =T) / sd(lep_over_bmi, na.rm = T)) -> wdf
# Add new ratio
wdf %>%
mutate(lep_over_bmi = LEPT / BMI) -> wdf
```
wdf
# Add new ratio
wdf %>%
mutate(lep_over_bmi = LEPT / BMI) -> wdf
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
# correct distribution
wdf %>%
# correct for skewness
mutate(lep_over_bmi = log(lep_over_bmi) ) %>%
# standardise
mutate(lep_over_bmi = lep_over_bmi - mean(lep_over_bmi, na.rm =T) / sd(lep_over_bmi, na.rm = T)) -> wdf
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
model = lm(lep_over_bmi ~ COHORT + GENDER + AGE, data = wdf)
parameters::parameters(model)
# NIHR cohort
wdf
# NIHR cohort
wdf
```{r }
# Add new ratio
wdf %>%
mutate(lep_over_bmi = LEPT / BMI) -> wdf
```
```{r }
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
```
```{r }
# correct distribution
wdf %>%
# correct for skewness
mutate(lep_over_bmi = log(lep_over_bmi) ) %>%
# standardise
mutate(lep_over_bmi = lep_over_bmi - mean(lep_over_bmi, na.rm =T) / sd(lep_over_bmi, na.rm = T)) -> wdf
```
```{r }
model = lm(lep_over_bmi ~ COHORT + GENDER + AGE, data = wdf)
parameters::parameters(model)
```
clearPushBack()
# NIHR cohort
wdf
```{r }
# Add new ratio
wdf %>%
mutate(lep_over_bmi = LEPT / BMI) -> wdf
```
```{r }
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
```
```{r }
# correct distribution
wdf %>%
# correct for skewness
mutate(lep_over_bmi = log(lep_over_bmi) ) %>%
# standardise
mutate(lep_over_bmi = lep_over_bmi - mean(lep_over_bmi, na.rm =T) / sd(lep_over_bmi, na.rm = T)) -> wdf
# cehck distribution new vraiable
plot(density(wdf$lep_over_bmi, na.rm = T))
model = lm(lep_over_bmi ~ COHORT + GENDER + AGE, data = wdf)
parameters::parameters(model)
